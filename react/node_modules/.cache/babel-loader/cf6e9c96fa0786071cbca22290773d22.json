{"ast":null,"code":"var _jsxFileName = \"/Users/dongbo/Desktop/react/src/components/class-cropper-modal/class-cropper-modal.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Cropper from 'react-cropper'; // 引入Cropper\n\nimport 'cropperjs/dist/cropper.css'; // 引入Cropper对应的css\n\nimport './class-cropper-modal.scss'; // export default class ClassCropperModal extends Component\n\nclass ClassCropperModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      if (!this.state.submitting) {\n        // let url = `/homepage_images` // 你要上传的url\n        // 拿到文件名\n        // let filename = this.props.uploadedImageFile.name\n        console.log('正在上传图片'); // TODO: 这里可以尝试修改上传图片的尺寸\n\n        this.cropper.getCroppedCanvas().toBlob(async blob => {\n          // // 创造提交表单数据对象\n          // const formData = new FormData()\n          // // 添加要上传的文件\n          // formData.append('file', blob, filename)\n          // 提示开始上传 (因为demo没有后端server, 所以这里代码我注释掉了, 这里是上传到服务器并拿到返回数据的代码)\n          // this.setState({submitting: true})\n          // 上传图片\n          // const resp = await http.post(url, formData)\n          // 拿到服务器返回的数据(resp)\n          // console.log(resp)\n          // 提示上传完毕\n          // this.setState({submitting: false})\n          //把选中裁切好的的图片传出去\n          this.props.onSubmit(blob); // 关闭弹窗\n\n          this.props.onClose();\n        });\n      }\n    };\n\n    this.state = {\n      src: null\n    };\n  }\n\n  componentDidMount() {\n    const fileReader = new FileReader();\n\n    fileReader.onload = e => {\n      const dataURL = e.target.result;\n      this.setState({\n        src: dataURL\n      });\n    };\n\n    fileReader.readAsDataURL(this.props.uploadedImageFile);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"class-cropper-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cropper-container-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cropper-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Cropper, {\n      src: this.state.src,\n      className: \"cropper\",\n      ref: cropper => this.cropper = cropper // Cropper.js options\n      ,\n      viewMode: 1,\n      zoomable: false,\n      aspectRatio: 1 // 固定为1:1  可以自己设置比例, 默认情况为自由比例\n      ,\n      guides: false,\n      preview: \".cropper-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"preview-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cropper-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"button-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"submit-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\u70B9\\u51FB\\u63D0\\u4EA4\"))));\n  }\n\n}\n\nClassCropperModal.propTypes = {\n  uploadedImageFile: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default ClassCropperModal;","map":{"version":3,"sources":["/Users/dongbo/Desktop/react/src/components/class-cropper-modal/class-cropper-modal.jsx"],"names":["React","Component","PropTypes","Cropper","ClassCropperModal","constructor","props","handleSubmit","state","submitting","console","log","cropper","getCroppedCanvas","toBlob","blob","onSubmit","onClose","src","componentDidMount","fileReader","FileReader","onload","e","dataURL","target","result","setState","readAsDataURL","uploadedImageFile","render","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport Cropper from 'react-cropper' // 引入Cropper\nimport 'cropperjs/dist/cropper.css' // 引入Cropper对应的css\nimport './class-cropper-modal.scss'\n// export default class ClassCropperModal extends Component\n\nclass ClassCropperModal extends Component {\n  static propTypes = {\n    uploadedImageFile: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      src: null\n    }\n  }\n\n  componentDidMount() {\n    const fileReader = new FileReader()\n    fileReader.onload = e => {\n      const dataURL = e.target.result\n      this.setState({ src: dataURL })\n    }\n\n    fileReader.readAsDataURL(this.props.uploadedImageFile)\n  }\n\n  handleSubmit = () => {\n    if (!this.state.submitting) {\n      // let url = `/homepage_images` // 你要上传的url\n      // 拿到文件名\n      // let filename = this.props.uploadedImageFile.name\n\n      console.log('正在上传图片')\n      // TODO: 这里可以尝试修改上传图片的尺寸\n      this.cropper.getCroppedCanvas().toBlob(async blob => {\n        // // 创造提交表单数据对象\n        // const formData = new FormData()\n        // // 添加要上传的文件\n        // formData.append('file', blob, filename)\n        // 提示开始上传 (因为demo没有后端server, 所以这里代码我注释掉了, 这里是上传到服务器并拿到返回数据的代码)\n        // this.setState({submitting: true})\n        // 上传图片\n        // const resp = await http.post(url, formData)\n        // 拿到服务器返回的数据(resp)\n        // console.log(resp)\n        // 提示上传完毕\n        // this.setState({submitting: false})\n\n        //把选中裁切好的的图片传出去\n        this.props.onSubmit(blob);\n\n        // 关闭弹窗\n        this.props.onClose()\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"class-cropper-modal\">\n        <div className=\"modal-panel\">\n          <div className=\"cropper-container-container\">\n            <div className=\"cropper-container\">\n              <Cropper\n                src={this.state.src}\n                className=\"cropper\"\n                ref={cropper => (this.cropper = cropper)}\n                // Cropper.js options\n                viewMode={1}\n                zoomable={false}\n                aspectRatio={1} // 固定为1:1  可以自己设置比例, 默认情况为自由比例\n                guides={false}\n                preview=\".cropper-preview\"\n              />\n            </div>\n            <div className=\"preview-container\">\n              <div className=\"cropper-preview\" />\n            </div>\n          </div>\n          <div className=\"button-row\">\n            <div className=\"submit-button\" onClick={this.handleSubmit}>\n              点击提交\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default ClassCropperModal;\n"]},"metadata":{},"sourceType":"module"}